# -*- coding: utf-8 -*-
"""image to text.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kUn3CDXLp5uISGNrD9PYNx_61R7L8NNm
"""

!pip install transformers gradio pillow --quiet

"""Lading model"""

from transformers import BlipProcessor, BlipForConditionalGeneration
from PIL import Image
import gradio as gr
import torch
"""upload image here"""

"""Gradio UI"""

# Load BLIP model
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")

# Use GPU if available
device = "cuda" if torch.cuda.is_available() else "cpu"
model.to(device)

# Image captioning function
def describe_image(image):
    try:
        image = image.convert('RGB')
        inputs = processor(image, return_tensors="pt").to(device)
        out = model.generate(**inputs)
        caption = processor.decode(out[0], skip_special_tokens=True)
        return caption
    except Exception as e:
        return f"Error: {e}"

# Gradio UI
demo = gr.Interface(
    fn=describe_image,
    inputs=gr.Image(type="pil", label="Upload an Image"),
    outputs=gr.Textbox(label="Generated Caption"),
    title="üñºÔ∏è Image Describer with Hugging Face",
    description="Upload an image to get a human-like description generated by BLIP (Salesforce)."
)

demo.launch(share=True)  # share=True creates public link